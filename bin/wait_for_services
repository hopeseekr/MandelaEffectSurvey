#!/usr/bin/env bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

i=0
TIMEOUT=30

APP_STATUS=1
DB_STATUS=1
WEB_STATUS=1
REDIS_STATUS=1

. "${DIR}"/lib/args.sh
. "${DIR}"/lib/rm.sh
. "${DIR}"/lib/tty.sh

# Checks the status of the app, db and web services
checkServices() {
  nc -z api 9000 &> /dev/null
  APP_STATUS=$?

  nc -z db 5432 &> /dev/null
  DB_STATUS=$?

  nc -z api 80 &> /dev/null
  WEB_STATUS=$?

  nc -z redis 6379 &> /dev/null
  REDIS_STATUS=$?
}

# Prints the status of service named $1 based on the status code of $2
printServiceStatus() {
  NAME=$1
  STATUS=$2

  if [ "$STATUS" = 0 ]; then
    echo -ne "${GREEN}${NAME}${NC} "
  else
    echo -ne "${RED}${NAME}${NC} "
  fi
}

# Prints the status of the app, db and web services
printServicesStatus() {
    echo -ne "\r"

    printServiceStatus App ${APP_STATUS}
    printServiceStatus DB ${DB_STATUS}
    printServiceStatus Redis ${REDIS_STATUS}
    printServiceStatus Web ${WEB_STATUS}

    if [ "$i" -ne "0" ]; then
        for ii in `seq 1 ${i}`; do
          echo -n '.'
        done
    fi
}

echo "Waiting for Services:"
printServicesStatus

checkServices
printServicesStatus

while [ "$APP_STATUS" != 0 -o "$DB_STATUS" != 0 -o "$WEB_STATUS" != 0 -o "$REDIS_STATUS" != 0 ]; do
  sleep 1s
  i=$(expr $i + 1)

  checkServices
  printServicesStatus

  if [ "$i" -gt "$TIMEOUT" ]; then
    break
  fi
done

echo

if [ "$APP_STATUS" != 0 -o "$DB_STATUS" != 0 -o "$WEB_STATUS" != 0 -o "$REDIS_STATUS" != 0 ]; then
  echo -e "${RED}Timeout expired while waiting for services to start.${NC}"
  exit 1;
fi

echo -e "${GREEN}Services are now available.${NC}"
